#!/bin/bash
name="name" #default
case "$1" in
    -n |--name)
          name="name"; shift;
          ;;
    -p | -path)
          name=""; shift;
          ;;
    default)
          name="name"
          ;;
esac
shopt -s nullglob nocaseglob
listFrom="repositories" # default
case "$1" in
      -r |--repo | --repository)
          listFrom="repositories"; shift;
        ;;
      -w |--trees | --worktrees)
          listFrom="worktrees"; shift;
        ;;
      default)
          listFrom="worktrees"
        ;;
esac
declare -a _repositories
declare -ag GitRepositories
source "$DEV_APP_DIR"/matchGitRepositories -p "$1" "$2"

declare -ag GitWorktrees
GitWorktrees=()
#listFrom="repositories"
# case $listFrom in
# repositories)
    # shellcheck disable=SC2068
    for r in "${GitRepositories[@]}"; do
        # echo
        # "$DEV_APP_DIR"/bar ${#r}
        # echo "$r"
        # "$DEV_APP_DIR"/bar ${#r}
        skip=""
        cd "$r" || { skip="skip"; }
        if [ ! $skip ]; then
          declare -a _worktrees
          mapfile -t _worktrees < <(git worktree list |sed -e 's/ .*//')
          if [ ${#_worktrees} -gt 0 ]; then
            for wt in ${_worktrees[@]}; do
              GitWorktrees+=( "$wt" )
            done
          fi
          if [[ ! -e "$r" ]]; then echo "Error - Could not find worktree at the given path"; fi
          cd - >/dev/null|| { echo "cd error"; }
        fi
    done
#        ;;
#    default)
#        ;;
#  esac
# worktrees)
#     shopt -s nullglob nocaseglob
#     declare -a _suitePaths
#     declare -a _worktreePaths
#     if [[ "$1" == "" ]]; then
#         _suitePaths=( "$DEV_SUITES_DIR"/*/ )
#     else
#         if [[ -e "$DEV_SUITES_DIR"/"$1" ]]; then
#           _suitePaths=( "$DEV_SUITES_DIR"/"$1"/ )
#         else
#           _suitePaths=( "$DEV_SUITES_DIR"/*"$1"*/ )
#         fi
#     fi
#     for sp in "${_suitePaths[@]}"; do
#         if [[ -e "$sp"/worktrees/"$2" ]]; then
#           _worktreePaths+=( "$sp"/worktrees/"$2" )
#         else
#           _worktreePaths=( "$sp"/worktrees/*"$2"*/ )
#         fi
#     done
#     shopt -u nullglob nocaseglob
#     for  sp in "${_worktreePaths[@]}"; do
#       sp=${sp%/}
#       if [ "$name" ]; then
#         GitWorktrees+=("${sp##*/}") # name only
#       else
#         GitWorktrees+=("${sp}") # full path to suite
#       fi
#     done
#     readarray -t -d '' GitWorktrees < <(printf '%s\0' "${GitWorktrees[@]}" | sort -z);
# ;;

echo ${BASH_SOURCE[0]}
echo ${0}
echo ${#GitWorktrees}
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  for wt in "${GitWorktrees[@]}"; do echo "$wt"; done;
fi
shopt -u nullglob nocaseglob
#Tests
# "$DEV_APP_DIR/matchGitWorktrees"; echo ${GitWorktrees[@]}
# "$DEV_APP_DIR/matchGitWorktrees" fg
# "$DEV_APP_DIR/matchGitWorktrees" f
# "$DEV_APP_DIR/matchGitWorktrees" -n fg simgear
# "$DEV_APP_DIR/matchGitWorktrees" -p fg

