#!/bin/bash
declare -ag GitRepositories
declare -ag GitWorktrees
name="name" #default
case "$1" in
    -n |--name)
          name="name"; shift;
          ;;
    -p | -path)
          name=""; shift;
          ;;
    default)
          name="name"
          ;;
esac
shopt -s nullglob nocaseglob

declare -a _repositories
GitRepositories=()
GitWorktrees=()
source "$DEV_APP_PATH"/matchGitRepositories -p "$1" "$2"
    # shellcheck disable=SC2068
for r in "${GitRepositories[@]}"; do
  if [[ ! -e "$r" ]]; then
    echo "Error: Repository $r not found, which is a bit odd. "
      exit 1
  fi
  skip=""
  cd "$r" || { skip="skip"; }
  if [ ! $skip ]; then
    declare -a _worktrees
    mapfile -t _worktrees < <(git worktree list |grep -v '/repositories/' |sed -e 's/ .*$//' )
    if [ ${#_worktrees} -gt 0 ]; then
      for wt in ${_worktrees[@]}; do
        if [[ "$wt" != "" && -e "$wt" ]]; then
          GitWorktrees+=( "$wt" )
        else
          echo "Error - Could not find worktree at the given path";
          echo ""
          echo "Quick Fix:"
          echo "cd $r; git workspace remove $wt; cd - >/dev/hull;"
        fi
      done
    fi
    cd - >/dev/null|| { echo "cd error"; }
  fi
done

# #echo ${BASH_SOURCE[0]}
#echo ${0}
#echo ${#GitWorktrees}
readarray -t -d '' GitWorktrees < <(printf '%s\0' "${GitWorktrees[@]}" | sort -z);
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  for wt in "${GitWorktrees[@]}"; do echo "$wt"; done;
fi
shopt -u nullglob nocaseglob

# listFrom="repositories" # default
# case "$1" in
#       -r |--repo | --repository)
#           listFrom="repositories"; shift;
#         ;;
#       -w |--trees | --worktrees)
#           listFrom="worktrees"; shift;
#         ;;
#       default)
#           listFrom="worktrees"
#         ;;
# esac
        # echo
        # "$DEV_APP_PATH"/bar ${#r}
        # echo "$r"
        # "$DEV_APP_PATH"/bar ${#r}
        #Tests
# "$DEV_APP_PATH/matchGitWorktrees"; echo ${GitWorktrees[@]}
# "$DEV_APP_PATH/matchGitWorktrees" fg
# "$DEV_APP_PATH/matchGitWorktrees" f
# "$DEV_APP_PATH/matchGitWorktrees" -n fg simgear
# "$DEV_APP_PATH/matchGitWorktrees" -p fg

#listFrom="repositories"
# case $listFrom in
# repositories)#        ;;
#    default)
#        ;;
#  esac
# worktrees)
#     shopt -s nullglob nocaseglob
#     declare -a _suitePaths
#     declare -a _worktreePaths
#     if [[ "$1" == "" ]]; then
#         _suitePaths=( "$DEV_SUITES_PATH"/*/ )
#     else
#         if [[ -e "$DEV_SUITES_PATH"/"$1" ]]; then
#           _suitePaths=( "$DEV_SUITES_PATH"/"$1"/ )
#         else
#           _suitePaths=( "$DEV_SUITES_PATH"/*"$1"*/ )
#         fi
#     fi
#     for sp in "${_suitePaths[@]}"; do
#         if [[ -e "$sp"/worktrees/"$2" ]]; then
#           _worktreePaths+=( "$sp"/worktrees/"$2" )
#         else
#           _worktreePaths=( "$sp"/worktrees/*"$2"*/ )
#         fi
#     done
#     shopt -u nullglob nocaseglob
#     for  sp in "${_worktreePaths[@]}"; do
#       sp=${sp%/}
#       if [ "$name" ]; then
#         GitWorktrees+=("${sp##*/}") # name only
#       else
#         GitWorktrees+=("${sp}") # full path to suite
#       fi
#     done
#
# ;;