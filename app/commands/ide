#!/bin/bash
#  SPDX-FileName: dev0/app/ide
#  SPDX-FileComment:User by run and build commands
#  SPDX-FileCopyrightText: Copyright (C) 2024 Patrick Callahan
#  SPDX-License-Identifier: GPL-2.0-or-later

# shellcheck disable=SC1091
#set -x
declare  exit
declare -g exit
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  exit="exit"
else
  exit="return"
fi
declare -g suite
echo source "$DEV_APP_DIR"/utils/getSuite "$1"
source "$DEV_APP_DIR"/utils/getSuite "$1"
declare -g gitReference
echo source "$DEV_APP_DIR"/utils/getGitReference "$2"
source "$DEV_APP_DIR"/utils/getGitReference "$2"

declare projectDir
declare editsDir
declare -a codeWorkspacePaths
shopt -s nullglob
#projectDir="$DEV_SUITES_DIR"/"$suite"/project
editsDir="$DEV_SUITES_DIR"/"$suite"/edits
codeWorkspacePaths=("$DEV_SUITES_DIR"/"$suite"/edits/"$suite".*"$gitReference"*.code-workspace)
echo "${#codeWorkspacePaths[@]}"
echo "${codeWorkspacePaths[@]}"
if [[ ${#codeWorkspacePaths[@]} -eq 1 && -e $editsDir && -e  ${codeWorkspacePaths[0]} ]]; then
  cd "$editsDir" ||{ echo "can''t find $editsDir"; return;}
  code "${codeWorkspacePaths[0]}"
elif [[ ${#codeWorkspacePaths[@]} -gt 1   && -e $editsDir ]]; then
        echo  "  ${codeWorkspacePaths[*]}"
        echo "be more specific than $gitReference"
        $exit 1
fi
